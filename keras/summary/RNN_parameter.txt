
# 앞에 output_node가 input_dim(feature)가 된다.
# x.shape = (4, 3, 1)

------------------------------------------------------------------------------
1. SimpleRNN


Layer (type)                 Output Shape              Param #
=================================================================
gru_1 (GRU)                  (None, 10)                  120
_________________________________________________________________
dense_1 (Dense)              (None, 10)                  110
_________________________________________________________________
dense_2 (Dense)              (None, 5)                   55
_________________________________________________________________
dense_3 (Dense)              (None, 1)                   6 
=================================================================

# SimpleRNN_parameter 계산
: num_params =  ( num_units   +   input_dim   +   1 )  *  num_units
               (output node값)  (잘라준 data)   (bias)  (output node값)
             =  (    10       +       1       +   1 )  *     10         = 120     
                   역전파 : 나온 '출력' 값이 다시 '입력'으로 들어감(자기회귀)


------------------------------------------------------------------------------
2. GRU


Layer (type)                 Output Shape              Param #
=================================================================
gru_1 (GRU)                  (None, 10)                  360
_________________________________________________________________
dense_1 (Dense)              (None, 10)                  110
_________________________________________________________________
dense_2 (Dense)              (None, 5)                   55
_________________________________________________________________
dense_3 (Dense)              (None, 1)                   6
=================================================================

# GRU_parameter 계산
 : num_params = 3 * ( num_units   +   input_dim   +   1 )  *  num_units
                   (output node값)  (잘라준 data)   (bias)  (output node값)
              = 3 * (    5        +       1       +   1 )  *     5          = 105     
                       역전파 : 나온 '출력' 값이 다시 '입력'으로 들어감(자기회귀)

                3 : GRU_gate연산 ( update, reset_gate / hidden_state) 

------------------------------------------------------------------------------
3. LSTM


Layer (type)                 Output Shape              Param #
=================================================================
gru_1 (GRU)                  (None, 10)                  480
_________________________________________________________________
dense_1 (Dense)              (None, 10)                  110
_________________________________________________________________
dense_2 (Dense)              (None, 5)                   55
_________________________________________________________________
dense_3 (Dense)              (None, 1)                   6
=================================================================

# LSTM_parameter 계산
 : num_params = 4 * ( num_units   +   input_dim   +   1 )  *  num_units
                   (output node값)  (잘라준 data)   (bias)  (output node값)
              = 4 * (    10       +       1       +   1 )  *     10          = 480  
                       역전파 : 나온 '출력' 값이 다시 '입력'으로 들어감(자기회귀)   

                4 : LSTM_gate연산 ( forget, input, output_gate / cell_state)

------------------------------------------------------------------------------
4. LSTM_sequences


LSTM  = (  ,  ,  ) : 3 차원
Dense = (  ,  )    : 2 차원

# return_sequences : 들어온 원래 차원으로 output  
                     ex) LSTM1 = LSTM(  10  )(dense1)
                                     2차원으로 output
                         LSTM1 = LSTM( 10,   return_sequence = True   )(LSTM2)
                                          (받아 들인) 3차원으로 output


Layer (type)                 Output Shape              Param #
=================================================================
input_1 (InputLayer)         (None, 3, 1)              0
_________________________________________________________________
lstm_1 (LSTM)                (None, 3, 10)             480
_________________________________________________________________
lstm_2 (LSTM)                (None, 10)                840
_________________________________________________________________
dense_1 (Dense)              (None, 5)                 55
_________________________________________________________________
dense_2 (Dense)              (None, 1)                 6
=================================================================


# LSTM_sequences_parameter
 :num_param = 4 * (  num_units   +   input_dim  + bias) * num_units
            = 4 * (LSTM2_output  + LSTM1_output +   1 ) * LSTM2_output
            = 4 * (    10    +    10     +   1 ) * 10
            = 840